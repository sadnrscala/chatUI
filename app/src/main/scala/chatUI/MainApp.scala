/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package chatUI



import akka.actor.typed.ActorSystem
import chatUI.ChatPeerGuardian.ChatCommand
import chatUI.model.{Message, User}
import chatUI.view.ChatController
import com.typesafe.config.ConfigFactory
import javafx.application.Application
import javafx.collections.{FXCollections, ObservableList}
import javafx.fxml.FXMLLoader
import javafx.scene.layout.HBox
import javafx.scene.Scene
import javafx.stage.Stage



class MainApp extends Application {

  private var _stage:Stage = _
  private var _appLayout:HBox = _
  private val _messagesData:ObservableList[Message] = FXCollections.observableArrayList
  private val _usersData:ObservableList[User] = FXCollections.observableArrayList


  var actorSystem: ActorSystem[ChatCommand] = _

  /**
   * start.
   * GUI start here
   * */
  override def start(primaryStage: Stage): Unit = {

    stage = primaryStage
    stage.setTitle("p2p chat")

    initAppLayout()
  }

  /** stop.
   * When GUI stop, terminate ActorSystems
   * */
  override def stop(): Unit = {
    actorSystem.terminate()
  }


  def initAppLayout(): Unit = {

    val loader = new FXMLLoader()
    loader.setLocation(getClass.getResource("view/ChatWindow.fxml"))

    appLayout = loader.load
    val scene = new Scene(appLayout)

    val chatController:ChatController = loader.getController
    chatController.mainApp = this
    actorSystem = ActorSystem(ChatPeerGuardian(chatController),
      "ChatPeer",
      ConfigFactory.load("application.cluster.conf"))

    stage.setScene(scene)
    stage.show()
  }


  // setters/getters
  def usersData: ObservableList[User] = _usersData
  def messagesData: ObservableList[Message] = _messagesData

  def appLayout: HBox = _appLayout
  def appLayout_=(el:HBox) = _appLayout = el

  def stage: Stage = _stage
  def stage_= (s:Stage): Unit = _stage = s
}

